name: build

on: [push, pull_request]

jobs:
  build-win:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Vanilla
      run: |
        wget https://files.catbox.moe/b7ulxr.zip -O Vanilla.zip
        unzip Vanilla.zip -d Vanilla
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
    - name: Setup ms-build
      run: sudo apt-get install -y nuget mono-devel mono-xbuild
    - name: Restore dependencies
      run: dotnet restore
    - name: Build PrePatcher
      run: |
        dotnet build PrePatcher -o PrePatcher/Output -p:Configuration=Release
    - name: Build Assembly-CSharp (Windows)
      run: |
        dotnet build Assembly-CSharp -p:SolutionDir=$PWD -p:Configuration=Release
    - name: Upload Windows Binary
      uses: actions/upload-artifact@v2
      with:
        name: ModdingApiWin
        path: ./OutputFinal/

  build-unix:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Vanilla
      run: |
        wget https://files.catbox.moe/998qrb.zip -O Vanilla.zip
        unzip Vanilla.zip -d Vanilla
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
    - name: Setup ms-build
      run: sudo apt-get install -y nuget mono-devel mono-xbuild
    - name: Restore dependencies
      run: dotnet restore
    - name: Build PrePatcher
      run: |
        dotnet build PrePatcher -o PrePatcher/Output -p:Configuration=Release
    - name: Build Assembly-CSharp 
      run: |
        dotnet build Assembly-CSharp -p:SolutionDir=$PWD -p:Configuration=Release
    - name: Upload Unix-like Binary
      uses: actions/upload-artifact@v2
      with:
        name: ModdingApiUnix
        path: ./OutputFinal/

  release:
    needs: [build-win, build-unix]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with: 
          path: ./artifacts
      - name: Zip
        run: |
            zip -jr ModdingApiWin.zip ./artifacts/ModdingApiWin/*
            zip -jr ModdingApiUnix.zip ./artifacts/ModdingApiUnix/*
      - name: Create release if a new tag is pushed
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./ModdingApiWin.zip
            ./ModdingApiUnix.zip
